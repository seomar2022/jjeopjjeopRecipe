<?xml version="1.0" encoding="UTF-8"?>
<!-- https://mybatis.org/mybatis-3/configuration.html#mappers에서 세줄만 복붙 -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jjeopjjeop.recipe.dao.PayDAO">

    <!--판매글 詳細페이지에서 장바구니에 넣기.-->
    <insert id="cartWrite" parameterType="com.jjeopjjeop.recipe.dto.PayDTO">
        INSERT INTO pay_history
        VALUES(pay_num_seq.nextval, #{user_id}, #{produce_num}, #{quantity}, 0,
        #{quantity} * (SELECT price FROM produce_board WHERE produce_num = #{produce_num}), 0)
    </insert>

<!--판매글에서 바로 결제할 때 쓰는것. 가장 최근에 장바구니에 들어간 항목의 pay_num 부르기
user_id = #{user_id}는 혹시 다른 사람이 결제하는 거랑 겹칠까봐 넣어둠.-->
    <select id="cartSelect" parameterType="String" resultType="int">
        SELECT *
        FROM (SELECT pay_num
                FROM pay_history
                WHERE user_id = #{user_id}
                AND pay = 0
                ORDER BY pay_num DESC)
        WHERE ROWNUM = 1
    </select>

    <resultMap type="com.jjeopjjeop.recipe.dto.ProduceDTO" id="produce_pay" autoMapping="true">
        <collection property="payDTOList" javaType="java.util.List" ofType="com.jjeopjjeop.recipe.dto.PayDTO" autoMapping="true" />
    </resultMap>

    <!--장바구니 버튼 누르면 나오는 장바구니 목록. pay=0인(즉 구매하지 않은) 컬럼을 불러온다. -->
    <select id="cartView" parameterType="Map" resultMap="produce_pay">
        <![CDATA[
        	SELECT rcp_li.* FROM
                (SELECT rcp.*, rownum rm FROM
                    ( SELECT produce_board.produce_num, pay_history.pay_num, produce_board.user_id, produce_board.produce_name, produce_board.price, pay_history.quantity, pay_history.pay, pay_history.total_price, produce_board.end_of_sale
                        FROM pay_history, produce_board
                        WHERE pay_history.pay = 0
                        AND pay_history.user_id = #{user_id}
                        AND pay_history.produce_num=produce_board.produce_num
                        ORDER BY pay_history.pay_num DESC)rcp)rcp_li
            WHERE rm >= #{startRow} AND rm <= #{endRow}
        ]]>
    </select>

    <!--구매내역 버튼 누르면 나오는 목록. pay=1인(즉 구매한) 컬럼을 불러온다. -->
    <select id="payView" parameterType="Map" resultMap="produce_pay">
        <![CDATA[
        	SELECT rcp_li.* FROM
                (SELECT rcp.*, rownum rm FROM
                    ( SELECT produce_board.produce_num, pay_history.pay_num, produce_board.user_id, produce_board.produce_name, produce_board.price, pay_history.quantity, pay_history.pay, pay_history.total_price, pay_history.review_check
                        FROM pay_history, produce_board
                        WHERE pay_history.pay = 1
                        AND pay_history.user_id = #{user_id}
                        AND pay_history.produce_num=produce_board.produce_num
                        ORDER BY pay_history.pay_num DESC)rcp)rcp_li
            WHERE rm >= #{startRow} AND rm <= #{endRow}
        ]]>
    </select>


<!-- 어차피 장바구니에 있는거는 pay=0이고 user_id도 걸러져있으니까 없어도될듯.-->
    <!--결제에 필요한 정보 담기. 나중에 user_id부분 산 회원으로 바꿔야함.  -->
    <select id="payInfo" parameterType="int" resultMap="produce_pay">
        SELECT pay_history.pay_num, produce_board.user_id, produce_board.produce_name, pay_history.quantity, pay_history.total_price
        FROM pay_history, produce_board
        WHERE pay_history.produce_num=produce_board.produce_num
        AND pay_history.pay_num = #{pay_num}
    </select>


    <!--===========================================================================-->
    <!-- 장바구니 목록에서 제거하기.-->
    <delete id="cartDelete" parameterType="int">
        DELETE FROM pay_history
        WHERE pay_num = #{pay_num}
        AND pay = 0
    </delete>

    <!--결제완료된 품목의 pay를 1로 바꾸기. 나중에 user_id부분도 넣어야할듯?->아닌듯. 어차피 앞에서 다 걸러졌으니까 괜찮겠다.-->
    <update id="cartUpdate" parameterType="int">
        UPDATE pay_history
        SET pay = 1
        WHERE pay_num = #{pay_num}
        AND pay=0
    </update>

    <!--페이지 처리를 위해 장바구니 항목 개수 세기.-->
    <select id="cartCount" resultType="int" parameterType="String">
        SELECT count(*)
        FROM pay_history
        WHERE pay=0
        AND user_id = #{user_id}
    </select>

    <!--페이지 처리를 위해 구매내역 항목 개수 세기.-->
    <select id="payCount" resultType="int" parameterType="String">
        SELECT count(*)
        FROM pay_history
        WHERE pay=1
        AND user_id = #{user_id}
    </select>

</mapper>